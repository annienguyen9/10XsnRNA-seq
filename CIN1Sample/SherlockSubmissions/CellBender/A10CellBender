#!/bin/bash
#SBATCH --job-name=A10cellbender                 # Job name
#SBATCH --error=/scratch/users/annie999/A10cellbender_error.txt    # Error log file
#SBATCH --partition=krasnow                      # Partition to submit to
#SBATCH --nodes=1
#SBATCH --ntasks-per-node=50
#SBATCH --time=12:00:00                           # Maximum run time (12 hours)
#SBATCH --mem=32G                                 # Memory request (32 GB)
#SBATCH --mail-user=annie999@stanford.edu         # Email notifications
#SBATCH --mail-type=BEGIN,END,FAIL                # Email notification types
# Load conda environment setup
source /scratch/users/annie999/conda/bin/activate
# Activate your conda environment
conda activate /scratch/users/annie999/conda/envs/cellbender
# Check if conda activate was successful
if [ $? -ne 0 ]; then
    echo "Error: Failed to activate Conda environment"
    exit 1
fi
# Verify cellbender installation
which cellbender
if [ $? -ne 0 ]; then
    echo "Error: cellbender not found in the environment"
    exit 1
fi
# Define paths
INPUT_FILE="/oak/stanford/groups/krasnow/ATN/snRNAseq_CIN1sample/ATNAlignedReadsCIN6/outs/raw_feature_bc_matrix.h5"
OUTPUT_FILE="/scratch/users/annie999/A10cellbender.h5"
CHECKPOINT_DIR="/scratch/users/annie999/checkpointsA10"
CHECKPOINT_FILE="${CHECKPOINT_DIR}/ckpt.tar.gz"
# Create checkpoint directory if it doesn't exist
mkdir -p ${CHECKPOINT_DIR}
# Debugging output for paths
echo "INPUT_FILE=${INPUT_FILE}"
echo "OUTPUT_FILE=${OUTPUT_FILE}"
echo "CHECKPOINT_DIR=${CHECKPOINT_DIR}"
echo "CHECKPOINT_FILE=${CHECKPOINT_FILE}"
# Run CellBender command
cellbender remove-background --input ${INPUT_FILE} --output ${OUTPUT_FILE} --checkpoint ${CHECKPOINT_FILE}
# Check if the checkpoint file is saved in the wrong directory and move it
if [ -f "/scratch/users/annie999/ckpt.tar.gz" ]; then
    echo "Moving checkpoint file to ${CHECKPOINT_DIR}"
    mv /scratch/users/annie999/ckpt.tar.gz ${CHECKPOINT_FILE}
fi
# Verify the checkpoint file exists in the correct directory
if [ ! -f ${CHECKPOINT_FILE} ]; then
    echo "Error: Checkpoint file was not saved correctly."
    exit 1
fi
echo "Checkpoint file saved correctly at ${CHECKPOINT_DIR}."
